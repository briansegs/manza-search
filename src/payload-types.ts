/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    articles: Article;
    media: Media;
    'home-media': HomeMedia;
    'literature-media': LiteratureMedia;
    'sound-media': SoundMedia;
    'art-media': ArtMedia;
    'travel-media': TravelMedia;
    'ad-media': AdMedia;
    'health-and-wellness-media': HealthAndWellnessMedia;
    'article-media': ArticleMedia;
    categories: Category;
    topics: Topic;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'home-media': HomeMediaSelect<false> | HomeMediaSelect<true>;
    'literature-media': LiteratureMediaSelect<false> | LiteratureMediaSelect<true>;
    'sound-media': SoundMediaSelect<false> | SoundMediaSelect<true>;
    'art-media': ArtMediaSelect<false> | ArtMediaSelect<true>;
    'travel-media': TravelMediaSelect<false> | TravelMediaSelect<true>;
    'ad-media': AdMediaSelect<false> | AdMediaSelect<true>;
    'health-and-wellness-media': HealthAndWellnessMediaSelect<false> | HealthAndWellnessMediaSelect<true>;
    'article-media': ArticleMediaSelect<false> | ArticleMediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    topics: TopicsSelect<false> | TopicsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    home: Home;
    scope: Scope;
    literature: Literature;
    sound: Sound;
    travel: Travel;
    art: Art;
    'health-and-wellness': HealthAndWellness;
    signin: Signin;
    'article-ads': ArticleAd;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    scope: ScopeSelect<false> | ScopeSelect<true>;
    literature: LiteratureSelect<false> | LiteratureSelect<true>;
    sound: SoundSelect<false> | SoundSelect<true>;
    travel: TravelSelect<false> | TravelSelect<true>;
    art: ArtSelect<false> | ArtSelect<true>;
    'health-and-wellness': HealthAndWellnessSelect<false> | HealthAndWellnessSelect<true>;
    signin: SigninSelect<false> | SigninSelect<true>;
    'article-ads': ArticleAdsSelect<false> | ArticleAdsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'articles';
                  value: string | Article;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: string;
  title: string;
  heroImage?: (string | null) | ArticleMedia;
  images?:
    | {
        image?: (string | null) | ArticleMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        imageType?: ('manza-database' | 'outside-link') | null;
        id?: string | null;
      }[]
    | null;
  relatedImages?: (string | Article)[] | null;
  layout?: (PostingsSection | ContentSection | ResourceSection)[] | null;
  relatedArticles?: (string | Article)[] | null;
  categories?: (string | Category)[] | null;
  otherVerifiedSources?:
    | {
        label: string;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | ArticleMedia;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  externalAuthors?: string[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article-media".
 */
export interface ArticleMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostingsSection".
 */
export interface PostingsSection {
  title: string;
  postings?:
    | {
        media?: (string | null) | ArticleMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'postingsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentSection".
 */
export interface ContentSection {
  title: string;
  alignment?: ('left' | 'right' | 'left & right') | null;
  image1?: (string | null) | ArticleMedia;
  image2?: (string | null) | ArticleMedia;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ResourceSection".
 */
export interface ResourceSection {
  title: string;
  type?: ('images' | 'books' | 'audio' | 'videos' | 'shop') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'resourceSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  Topic?: (string | null) | Topic;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "topics".
 */
export interface Topic {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | ArticleMedia;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-media".
 */
export interface HomeMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "literature-media".
 */
export interface LiteratureMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sound-media".
 */
export interface SoundMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "art-media".
 */
export interface ArtMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "travel-media".
 */
export interface TravelMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ad-media".
 */
export interface AdMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "health-and-wellness-media".
 */
export interface HealthAndWellnessMedia {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'articles';
          value: string | Article;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'articles';
    value: string | Article;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | ArticleMedia;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  authors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'articles';
        value: string | Article;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'home-media';
        value: string | HomeMedia;
      } | null)
    | ({
        relationTo: 'literature-media';
        value: string | LiteratureMedia;
      } | null)
    | ({
        relationTo: 'sound-media';
        value: string | SoundMedia;
      } | null)
    | ({
        relationTo: 'art-media';
        value: string | ArtMedia;
      } | null)
    | ({
        relationTo: 'travel-media';
        value: string | TravelMedia;
      } | null)
    | ({
        relationTo: 'ad-media';
        value: string | AdMedia;
      } | null)
    | ({
        relationTo: 'health-and-wellness-media';
        value: string | HealthAndWellnessMedia;
      } | null)
    | ({
        relationTo: 'article-media';
        value: string | ArticleMedia;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'topics';
        value: string | Topic;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  images?:
    | T
    | {
        image?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        imageType?: T;
        id?: T;
      };
  relatedImages?: T;
  layout?:
    | T
    | {
        postingsSection?: T | PostingsSectionSelect<T>;
        contentSection?: T | ContentSectionSelect<T>;
        resourceSection?: T | ResourceSectionSelect<T>;
      };
  relatedArticles?: T;
  categories?: T;
  otherVerifiedSources?:
    | T
    | {
        label?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  externalAuthors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostingsSection_select".
 */
export interface PostingsSectionSelect<T extends boolean = true> {
  title?: T;
  postings?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentSection_select".
 */
export interface ContentSectionSelect<T extends boolean = true> {
  title?: T;
  alignment?: T;
  image1?: T;
  image2?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ResourceSection_select".
 */
export interface ResourceSectionSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-media_select".
 */
export interface HomeMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "literature-media_select".
 */
export interface LiteratureMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sound-media_select".
 */
export interface SoundMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "art-media_select".
 */
export interface ArtMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "travel-media_select".
 */
export interface TravelMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ad-media_select".
 */
export interface AdMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "health-and-wellness-media_select".
 */
export interface HealthAndWellnessMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article-media_select".
 */
export interface ArticleMediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  Topic?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "topics_select".
 */
export interface TopicsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  authors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  layout?: PromoBlock[] | null;
  suggestedArticles?: (string | Article)[] | null;
  media?: (string | null) | HomeMedia;
  enableLink?: boolean | null;
  link?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'articles';
          value: string | Article;
        } | null);
    url?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoBlock".
 */
export interface PromoBlock {
  title: string;
  content?:
    | {
        media?: (string | null) | HomeMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'promoBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scope".
 */
export interface Scope {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "literature".
 */
export interface Literature {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  pageAds?:
    | {
        media?: (string | null) | LiteratureMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  paidTopSpot?: (string | Article)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sound".
 */
export interface Sound {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  pageAds?:
    | {
        media?: (string | null) | SoundMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  paidTopSpot?: (string | Article)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "travel".
 */
export interface Travel {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  heroImages?:
    | {
        media?: (string | null) | TravelMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  adImages?:
    | {
        media?: (string | null) | TravelMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "art".
 */
export interface Art {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  pageAds?:
    | {
        media?: (string | null) | ArtMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  paidTopSpot?: (string | Article)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "health-and-wellness".
 */
export interface HealthAndWellness {
  id: string;
  suggestedArticles?: (string | Article)[] | null;
  pageAds?:
    | {
        media?: (string | null) | HealthAndWellnessMedia;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'articles';
                value: string | Article;
              } | null);
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  paidTopSpot?: (string | Article)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signin".
 */
export interface Signin {
  id: string;
  pageAd?: {
    image?: (string | null) | AdMedia;
    url?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'articles';
            value: string | Article;
          } | null);
      url?: string | null;
    };
  };
  signinButtons?: {
    links?:
      | {
          title: string;
          userType: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article-ads".
 */
export interface ArticleAd {
  id: string;
  adCollections?:
    | {
        title: string;
        adGroups: {
          title: string;
          adType: 'black' | 'red' | 'green' | 'yellow' | 'blue';
          groupImage: string | AdMedia;
          adSections?:
            | {
                title?: string | null;
                ads?:
                  | {
                      media?: (string | null) | AdMedia;
                      enableLink?: boolean | null;
                      link?: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'articles';
                              value: string | Article;
                            } | null);
                        url?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        promoBlock?: T | PromoBlockSelect<T>;
      };
  suggestedArticles?: T;
  media?: T;
  enableLink?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoBlock_select".
 */
export interface PromoBlockSelect<T extends boolean = true> {
  title?: T;
  content?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scope_select".
 */
export interface ScopeSelect<T extends boolean = true> {
  suggestedArticles?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "literature_select".
 */
export interface LiteratureSelect<T extends boolean = true> {
  suggestedArticles?: T;
  pageAds?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  paidTopSpot?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sound_select".
 */
export interface SoundSelect<T extends boolean = true> {
  suggestedArticles?: T;
  pageAds?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  paidTopSpot?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "travel_select".
 */
export interface TravelSelect<T extends boolean = true> {
  suggestedArticles?: T;
  heroImages?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  adImages?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "art_select".
 */
export interface ArtSelect<T extends boolean = true> {
  suggestedArticles?: T;
  pageAds?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  paidTopSpot?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "health-and-wellness_select".
 */
export interface HealthAndWellnessSelect<T extends boolean = true> {
  suggestedArticles?: T;
  pageAds?:
    | T
    | {
        media?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  paidTopSpot?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signin_select".
 */
export interface SigninSelect<T extends boolean = true> {
  pageAd?:
    | T
    | {
        image?: T;
        url?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
      };
  signinButtons?:
    | T
    | {
        links?:
          | T
          | {
              title?: T;
              userType?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article-ads_select".
 */
export interface ArticleAdsSelect<T extends boolean = true> {
  adCollections?:
    | T
    | {
        title?: T;
        adGroups?:
          | T
          | {
              title?: T;
              adType?: T;
              groupImage?: T;
              adSections?:
                | T
                | {
                    title?: T;
                    ads?:
                      | T
                      | {
                          media?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                              };
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'articles';
          value: string | Article;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}